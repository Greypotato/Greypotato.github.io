<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>PHP</title>
      <link href="/2019/04/06/PHP/"/>
      <url>/2019/04/06/PHP/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>LSB隐写</title>
      <link href="/2019/04/05/LSB/"/>
      <url>/2019/04/05/LSB/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>平台上自己尝试着解了一些有关于图片隐写的问题，对于LSB隐写题目的一些学习与理解，以及个人的解题思路。</p><h2 id="LSB简介"><a href="#LSB简介" class="headerlink" title="LSB简介"></a>LSB简介</h2><p>LSB，称为：最低有效位，它的英文是Least Significant Bit 。我们知道图像像素一般是由RGB三原色（即红绿蓝）组成的，每一种颜色占用8位，0x00~0xFF，即一共有256种颜色，一共包含了256的3次方的颜色，颜色太多，而人的肉眼能区分的只有其中一小部分，这导致了当我们修改RGB颜色分量种最低的二进制位的时候，我们的肉眼是区分不出来的。LSB加密是信息隐藏中最基本的方法。古人的藏头诗也算是一种隐写。</p><p><img src="/2019/04/05/LSB/jian.png" alt="Image"></p><h2 id="对最低有效位的意思解析"><a href="#对最低有效位的意思解析" class="headerlink" title="对最低有效位的意思解析"></a>对最低有效位的意思解析</h2><p>png图片是一种无损压缩的位图片形格式，也只有在无损压缩或者无压缩的图片（BMP）上实现lsb隐写。如果图像是jpg图片的话，就没法使用lsb隐写了，原因是jpg图片对像数进行了有损压缩，修改的信息就可能会在压缩的过程中被破坏。而png图片虽然也有压缩，但却是无损压缩，这样修改的信息也就能得到正确的表达，不至于丢失。BMP的图片也是一样的，是没有经过压缩的。BMP图片一般是特别的大的，因为BMP把所有的像数都按原样储存，没有进行压缩。<br>png图片中的图像像数一般是由RGB三原色（红绿蓝）组成，每一种颜色占用8位，取值范围为0x00~0xFF，即有256种颜色，一共包含了256的3次方的颜色，即16777216种颜色。而人类的眼睛可以区分约1000万种不同的颜色，这就意味着人类的眼睛无法区分余下的颜色大约有6777216种。<br><img src="/2019/04/05/LSB/lj.png" alt="Image"><br>十进制的235表示的是绿色，我们修改了在二进制中的最低位，但是颜色看起来依旧没有变化。我们就可以修改最低位中的信息，实现信息的隐写。我修改最低有效位的信息的算法就叫做lsb加密算法，提取最低有效位信息的算法叫做lsb解密算法。<br><img src="/2019/04/05/LSB/lj01.png" alt="Image"><br><img src="/2019/04/05/LSB/lj02.png" alt="Image"></p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>解题必然会有工具这里， 在这里使用一款功能很强大的lsb隐写分析工具—StegSolve图片通道查看器。使用这个工具记得首先安装JDK配置JAVA环境，然后再使用StegSolve。<br>下面是我使用的JDK以及配置好后的StegSolve图标。<br><img src="/2019/04/05/LSB/java.png" alt="Image"></p><h2 id="使用工具"><a href="#使用工具" class="headerlink" title="使用工具"></a>使用工具</h2><p>之后看题目用stegsolve打开看到这张图片。<br><img src="/2019/04/05/LSB/java01.png" alt="Image"><br>使用stegsolve打开图片，按右方向键查看各通道显示的图像。一般有些题目会在某一个图像通道中直接显示出flag，但是显然这题不行，看来还需要绕些弯，要获取最低位的图片信息。<br>打开后使用Data Extract: 数据抽取，图片中隐藏数据的抽取。可以看到<img src="/2019/04/05/LSB/java05.png" alt="Image"><br>这时 看到这 突然会不知道如何去选择，或者乱选一气，当然这绝对出不来。那么我们应该如何去点。回到最开始的图片中<img src="/2019/04/05/LSB/java01.png" alt="Image">向右边一直翻动会发现<br>alpha plane7-0全是一个颜色没有任何变化，之后继续翻动会发现</p><p><img src="/2019/04/05/LSB/java02.png" alt="Image"></p><p>Red plane0这里左上角好像有些字符 继续翻动</p><p><img src="/2019/04/05/LSB/java03.png" alt="Image"><br>green plane0 左上角也同样有字符一样继续翻动</p><p><img src="/2019/04/05/LSB/java04.png" alt="Image"><br>blue  plane0左上角也有。这时候回到图片分析里  看到bit planes看到里面有通道选择 对应上面的三个0通道选择<img src="/2019/04/05/LSB/java05.png" alt="Image"><br>同时bit order 选择LSB一栏点击预览 可以得到<img src="/2019/04/05/LSB/java&lt;!--  --&gt;06.png" alt="Image">这时候看到上面有编码出现向上拉动，会发现flag<img src="/2019/04/05/LSB/java05.png" alt="Image"><br>这里我们就拿到了这道题的flag 就是 have a good time！</p><p>同样 第二道LSB 跟上述一样选择好通道一样可解出来<br><img src="/2019/04/05/LSB/TM01.png" alt="Image"><br>具体操作更上述一样就不在一一举出了。</p><p>这是我这个小白的解题思路，如有出错还请大佬轻喷。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2019/03/31/hello-world/README/"/>
      <url>/2019/03/31/hello-world/README/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用Hexo搭建个人博客+主题更换</title>
      <link href="/2019/03/16/hello-world/"/>
      <url>/2019/03/16/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关于个人博客的搭建过程，个人在这里面踩了很多的坑，初次搭建的不算成功，还好有团队的教学与学长的经验相助，在努力下搭建了我的个人博客。在此总结我在搭建的一些过程。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>本次过程只适用于windows的用户。用于个人学习记录。  </p><h3 id="搭建流程"><a href="#搭建流程" class="headerlink" title="搭建流程"></a>搭建流程</h3><p>一、Nodejs的安装</p><p>二、Git安装</p><p>三、GitHub创建个人仓库</p><p>四、配置SSH key</p><p>五、Hexo安装</p><p>六、发布网站</p><p>七、更改主题</p><h3 id="一、Nodejs的安装"><a href="#一、Nodejs的安装" class="headerlink" title="一、Nodejs的安装"></a>一、Nodejs的安装</h3><p>Hexo基于Node.js的，搭建博客网站首先需要安装Node.js环境。<br><img src="/2019/03/16/hello-world/nodejs.png" alt="Image text"></p><p>下载地址：http:\nodejs.cn\download<br>测试安装：命令行使用node -v 、npm -v，查看显示版本号即成功。<br>打开cmd命令行，成功界面如下<br><img src="/2019/03/16/hello-world/success.png" alt="Image text"></p><h3 id="二、Git安装"><a href="#二、Git安装" class="headerlink" title="二、Git安装"></a>二、Git安装</h3><p>网站在本地搭建好了，需要使用Git同步到GitHub上。</p><p>首先访问https:\git-scm.com\ 下载完毕后进入安装界面进行安装。<br><img src="/2019/03/16/hello-world/git01.png" alt="Image"></p><p><img src="/2019/03/16/hello-world/git02.png" alt="Image"></p><p>正常安装后使用git –version的命令来测试git是否安装成功。</p><p><img src="/2019/03/16/hello-world/git03.png" alt="Image"></p><p>到这里git就已经安装成功了！</p><h3 id="三、GitHub创建个人仓库"><a href="#三、GitHub创建个人仓库" class="headerlink" title="三、GitHub创建个人仓库"></a>三、GitHub创建个人仓库</h3><p>1.首先登录https:\github.com 进行账户注册和新建项目。此处由于之前创建过所以无法创建。在这里需要注意目必须要遵守格式：你的账户名.github.io。并且需要勾选Initialize this repository with a README。</p><p><img src="/2019/03/16/hello-world/github01.png" alt="Image"></p><p>在建好的项目右侧有个settings按钮，点击它，向下拉到GitHub Pages，你会看到那边有个网址，访问它，你会现该项目已经被部署到网络上，能够通过外网来访问它。如下图所示：</p><p><img src="/2019/03/16/hello-world/github02.png" alt="Image"></p><h3 id="四、配置SSH-key"><a href="#四、配置SSH-key" class="headerlink" title="四、配置SSH key"></a>四、配置SSH key</h3><p>为了要拥有你的github权限，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。<br><img src="/2019/03/16/hello-world/ssh01.png" alt="Image">使用$ cd ~. ssh #检查本机已存在的ssh密钥。<br><img src="/2019/03/16/hello-world/ssh02.png" alt="Image"></p><p>如果提示：No such file or directory 说明你是第一次使用git。然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到.ssh\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：<img src="/2019/03/16/hello-world/ssh03.png" alt="Image"></p><p>之后进行测试是否成功！<img src="/2019/03/16/hello-world/ssh04.png" alt="Image"><br>如果提示Are you sure you want to continue connecting (yes\no)?，输入yes，然后会看到：<img src="/2019/03/16/hello-world/ssh05.png" alt="Image"><br>看到这个信息说明SSH已配置成功！</p><h3 id="五、Hexo安装"><a href="#五、Hexo安装" class="headerlink" title="五、Hexo安装"></a>五、Hexo安装</h3><p>1.首先在自己认为合适的地方创个文件夹，个人是在D盘建了一个hexo然后再建立了blog文件夹。也可以直接建立一个blog文件然后使用DOS命令进入到该文件夹里面。然后输入输入npm install hexo -g，开始安装Hexo.<br>![Image] (hello-world\hexo01.png)<br>完成后，继续输入命令 cnpm install -g hexo-cli<br>![Image]     (hello-world\hexo02.png)</p><p>等待完成，再输入命令 cnpm install hexo –save<br><img src="/2019/03/16/hello-world/hexo03.png" alt="Image"></p><p>至此Hexo安装完成，使用查看版本命令 hexo -v 检查是否正常安装。<img src="/2019/03/16/hello-world/hexo04.png" alt="Image"></p><h3 id="六、发布网站"><a href="#六、发布网站" class="headerlink" title="六、发布网站"></a>六、发布网站</h3><p>1、本地启动<br>创建一个新文件夹（我的是在E盘创建的Blog），进入该文件夹，右键Git Bash Here，输入 hexo init 命令。<br>接下来输入 hexo s -g 命令启动，启动后浏览器访问localhost:4000查看博客效果。</p><p>2、部署到Github<br>本地成功后下面就要部署到Git了，打开_config.yml进行配置，如下图，复制你的仓库地址给repo参数<br><img src="/2019/03/16/hello-world/blog01.png" alt="Image"><br>在Git命令窗口输入 npm install hexo-deployer-git –save 安装hexo-deployer-git自动部署发布工具，等待安装完成，输入 （hexo clean）   （hexo g）   （hexo d） 命令发布到Github，这里注意第一次发布的话会需要输入你的Github账号跟密码，等待出现下图的信息就说明发布成功了，在浏览器输入yourname.github.io就可以看到你的博客了。<img src="/2019/03/16/hello-world/blog02.png" alt="Image"></p><h3 id="七、更改主题"><a href="#七、更改主题" class="headerlink" title="七、更改主题"></a>七、更改主题</h3><p>部署完毕后，可以根据自己的喜好更改自己的主题在hexo的官网中有主题选项然后进行配置更改找到自己喜欢的网站主题。完成配置就好了。</p><h3 id="对于上传图片的问题解决"><a href="#对于上传图片的问题解决" class="headerlink" title="对于上传图片的问题解决"></a>对于上传图片的问题解决</h3><p> 前一段搭建好的个人博客 图片怎么传也传不上去，把图片放在github的库中也没有操作好 ，甚至找了一个破解版的MarkdownPad 2 插入图片也没有成功，对此  差点自闭。 后来在学长的指导下得出了如何简单的上传图片。放下如下</p><p> 1、cd到博客根目录下 查看_config.yml文件<br>    查找 post_asset_folder<br>    字段确定post_asset_folder<br>    设置为true -&gt; post_asset_folder:true</p><p>2、当你设置 post_asset_folder  参数后，在建立文件时，Hexo 会自动建立一个与文章同名的文件夹，你可以把与该文章相关的所有资源都放到此文件夹内，这样就可以更方便的使用资源。</p><p>3、到博客的根目录下执行 npm install <a href="https://github.com/CodeFalling/hexo-asset-image" target="_blank" rel="noopener">https://github.com/CodeFalling/hexo-asset-image</a> –save 命令来进行插件的安装。</p><p>4、然后创建一文章 hexo new “test” 然后查看博客的 ../source/_posts 目录下的文件，会看到存在一个test 文件夹 和 test.md 文件</p><p>5、将需要显示在test.md文件中的图片放到上面命令生成的test文件夹中<br>    在test.md文件中使用命令显示文件，其中中括号的内容会是你在md文件中图片的名字，小括号中的地址的格式为 文件夹名/图片名，例如 test/test.png</p><p>在此终于解决了图片上传的问题，由衷感谢学长的帮助。<br>个人博客，希望能够帮助到一些人，小白第一次发博，还请大佬轻喷。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
